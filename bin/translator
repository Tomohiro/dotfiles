#!/usr/bin/env ruby

require 'open-uri'
require 'readline'
require 'nokogiri'

module Translate
  class GoogleTranslator
    def initialize
      @modes = {
        je: { from: 'ja', to: 'en' },
        ej: { from: 'en', to: 'ja' }
      }
      change_mode('ej')
    end

    def has_mode?(mode)
      @modes.has_key?(mode.to_sym)
    end

    def change_mode(mode)
      mode = mode.to_sym
      from = @modes[mode][:from]
      to   = @modes[mode][:to]
      @method = "#{from}%7C#{to}"
      puts "Changed translate mode #{from} to #{to}."
    end

    def translate(body)
      uri = "http://www.google.com/translate_t?langpair=#{@method}&text=#{URI::escape(body)}"
      translated = Nokogiri::HTML(open(uri)).search('span#result_box/span').map(&:content).join
      translated == '' ? 'Translate failed' : translated
    end
  end

  class Shell
    def initialize
      @translator = GoogleTranslator.new
    end

    def run
      while buf = Readline.readline('> ', true)
        exit if exit?(buf)
        if @translator.has_mode?(buf)
          @translator.change_mode(buf)
        else
          puts @translator.translate(buf)
        end
      end
    end

    def exit?(command)
      command =~ /exit|quit/
    end

    def self.run
      new.run
    end
  end
end

Translate::Shell.run
